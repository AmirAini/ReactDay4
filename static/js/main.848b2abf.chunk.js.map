{"version":3,"sources":["components/task/tasks.module.css","logo.svg","components/task/index.js","containers/dashboard/index.js","App.js","reportWebVitals.js","index.js","containers/dashboard/dashboard.module.css"],"names":["module","exports","Tasks","className","classes","task_holder","onClick","this","props","click","title","time","React","Component","Dashboard","state","items","addNew","bind","val","filterItem","filter","list","key","setState","console","log","_inputElement","value","newItem","Date","now","dashboard_holder","type","placeholder","ref","a","dashboard_task","map","delete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":";gFACAA,EAAOC,QAAU,CAAC,YAAc,6B,yGCDjB,I,kFCGTC,E,4JAQF,WACI,OACI,sBAAKC,UAAWC,IAAQC,YAAaC,QAASC,KAAKC,MAAMC,MAAzD,UACI,6BAAKF,KAAKC,MAAME,QAChB,6BAAKH,KAAKC,MAAMG,c,GAZZC,IAAMC,WAkBXX,IC2DAY,E,kDA1EX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAO,CACRC,MAAM,IAEV,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBALA,E,0CAQlB,SAAOC,GACH,IAAMC,EAAab,KAAKQ,MAAMC,MAAMK,QAChC,SAAAC,GAAI,OAAIA,EAAKC,MAAQJ,KAGzBZ,KAAKiB,SAAS,CAACR,MAAOI,M,oBAG1B,WAAS,IAAD,OAKJ,GAJAK,QAAQC,IAAI,OACZD,QAAQC,IAAInB,KAAKoB,cAAcC,OAGE,KAA7BrB,KAAKoB,cAAcC,MAAc,CAGjC,IAAMC,EAAS,CACXnB,MAAOH,KAAKoB,cAAcC,MAC1BL,IAAKO,KAAKC,OAcdxB,KAAKiB,SAAS,CAAER,MAAM,GAAD,mBAAMT,KAAKQ,MAAMC,OAAjB,CAAwBa,MAAY,kBAAKJ,QAAQC,IAAI,EAAKX,MAAMC,UAIzFT,KAAKoB,cAAcC,MAAO,K,oBAI9B,WAAS,IAAD,OACJ,OACI,sBAAKzB,UAAWC,IAAQ4B,iBAAxB,UACI,gCACI,uBAAOC,KAAK,OAAOC,YAAY,QAAQC,IAAK,SAACC,GAAD,OAAM,EAAKT,cAAgBS,KACvE,wBAAQ9B,QAASC,KAAKU,OAAtB,uBAIJ,qBAAKd,UAAWC,IAAQiC,eAAxB,SAEQ9B,KAAKQ,MAAMC,MAAMsB,KAAI,SAAAhB,GAAI,OACzB,cAAC,EAAD,CACAZ,MAAOY,EAAKZ,MACZC,KAAMW,EAAKC,IACXd,MAAO,kBAAK,EAAK8B,OAAOjB,EAAKC,oB,GAjE7BX,IAAMC,WCOf2B,MARf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAzC,EAAOC,QAAU,CAAC,iBAAmB,oCAAoC,eAAiB,qC","file":"static/js/main.848b2abf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task_holder\":\"tasks_task_holder__3hvjQ\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport classes from \"./tasks.module.css\";\r\n\r\nclass Tasks extends React.Component {\r\n\r\n\r\n    \r\n//actual method :)\r\n\r\n \r\n\r\n    render(){\r\n        return(\r\n            <div className={classes.task_holder} onClick={this.props.click}>\r\n                <h1>{this.props.title}</h1>\r\n                <h6>{this.props.time}</h6>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tasks;","import React from 'react';\r\nimport classes from \"./dashboard.module.css\";\r\nimport Tasks from '../../components/task';\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            items:[],\r\n        }\r\n        this.addNew = this.addNew.bind(this);\r\n    }\r\n\r\n    delete(val){\r\n        const filterItem = this.state.items.filter(\r\n            list => list.key !== val);\r\n\r\n        //!replace old array\r\n        this.setState({items: filterItem});\r\n    }\r\n\r\n    addNew(){\r\n        console.log('hit');\r\n        console.log(this._inputElement.value);\r\n        \r\n        //push value into an array\r\n        if (this._inputElement.value !== \"\") {\r\n            \r\n            //new item to concat\r\n            const newItem= {\r\n                title: this._inputElement.value,\r\n                key: Date.now()\r\n            }\r\n\r\n            //get item and concat the new items\r\n            // this.setState(\r\n            //     //empty \r\n            //     (pervState)=> {\r\n            //     //return new object \r\n            //     return {\r\n            //         items: pervState.items.concat(newItem)}\r\n            //     }, \r\n            // ()=> console.log(this.state.items))\r\n\r\n            //! deconstructor to push an array\r\n            this.setState({ items: [...this.state.items, newItem] }, ()=> console.log(this.state.items));\r\n        }\r\n        \r\n        //reset the value\r\n        this._inputElement.value =\"\";\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className={classes.dashboard_holder}>\r\n                <div>\r\n                    <input type=\"text\" placeholder=\"Tasks\" ref={(a)=> this._inputElement = a} />\r\n                    <button onClick={this.addNew}>Submit</button>\r\n                </div>\r\n                \r\n\r\n                <div className={classes.dashboard_task}>\r\n                {\r\n                        this.state.items.map(list => (\r\n                        <Tasks \r\n                        title={list.title}\r\n                        time={list.key}\r\n                        click={()=> this.delete(list.key)}/> \r\n                    ))\r\n                }\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dashboard;","import logo from './logo.svg';\nimport Dashboard from \"./containers/dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard_holder\":\"dashboard_dashboard_holder__1_X-3\",\"dashboard_task\":\"dashboard_dashboard_task__ZP5Nz\"};"],"sourceRoot":""}